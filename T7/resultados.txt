Sistema operativo utilizado
Linux debian11mate 5.10.0-25-amd64 #1 SMP Debian 5.10.191-1 (2023-08-16) x86_64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-san
./viajante.bin-san
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.449810
0 20 13 22 2 26 6 29 21 4 18 17 28 5 30 11 14 9 25 1 27 7 32 23 19 16 10 31 3 12 8 24 15 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.327664
0 26 8 16 32 5 7 9 4 17 1 13 14 23 27 30 28 18 10 31 3 29 11 6 2 12 20 25 15 24 22 19 21 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.391957
0 1 15 25 2 29 7 22 11 26 12 8 10 5 30 27 32 6 31 14 20 13 24 18 17 28 4 21 9 16 23 19 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.343315
0 31 8 17 28 11 6 16 26 12 2 27 23 7 19 13 4 32 10 18 21 5 30 29 22 3 24 9 20 14 1 15 25 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.157922
0 22 14 27 8 21 20 9 1 24 28 30 5 17 32 18 4 16 31 11 15 25 13 10 3 2 26 19 12 6 29 23 7 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.022507
0 6 27 8 7 3 11 10 17 18 13 24 9 19 5 30 28 32 16 23 4 20 21 15 1 25 2 12 29 26 31 22 14 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.285195
0 12 5 27 3 21 25 9 30 10 28 32 13 19 15 22 24 14 20 18 17 4 16 8 31 7 26 23 11 6 29 2 1 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.208303
0 15 20 1 21 28 18 27 22 32 5 8 31 12 3 7 24 26 29 16 23 10 30 14 9 25 11 6 2 19 4 17 13 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.814830
0 4 18 21 17 19 6 29 27 20 24 12 16 13 1 15 8 11 26 7 5 31 30 2 25 9 14 32 3 23 28 10 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.446681
0 11 29 2 9 20 4 17 21 18 3 12 6 19 22 7 28 32 10 30 5 26 8 24 14 25 13 15 1 31 23 27 16 0
Tiempo=24377

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=13433 speedup=1.814710 distancia minima=10.391957
0 1 15 25 2 29 7 22 11 26 12 8 10 5 30 27 32 6 31 14 20 13 24 18 17 28 4 21 9 16 23 19 3 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run-g ====
gcc -g -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-g
./viajante.bin-g
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.362709
0 27 7 19 23 26 13 10 30 6 11 9 14 2 29 16 20 1 17 12 22 8 32 28 18 25 4 15 3 31 21 24 5 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.508981
0 30 13 10 31 2 26 16 11 5 28 19 17 7 3 25 4 21 22 18 9 15 12 1 29 32 8 20 14 6 27 23 24 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.121916
0 6 32 9 7 23 30 10 5 15 4 24 25 19 3 1 21 27 29 13 14 26 31 17 12 22 8 18 11 28 16 2 20 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.026808
0 10 25 19 4 18 8 28 6 31 29 32 9 5 1 26 30 16 20 2 14 13 23 27 21 24 7 17 11 15 3 12 22 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.472252
0 29 20 31 15 4 27 17 3 7 19 25 13 30 16 18 8 1 28 5 2 14 6 32 9 10 26 23 11 21 24 12 22 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.327697
0 26 20 17 6 28 5 32 22 12 8 9 11 25 27 21 7 13 31 30 16 29 2 18 14 4 24 3 15 1 23 19 10 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.257925
0 6 18 8 5 14 24 13 22 1 3 7 19 27 17 21 12 15 2 16 10 30 31 23 25 4 28 20 32 9 11 29 26 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.598674
0 21 19 7 27 24 16 14 1 10 28 32 6 11 15 18 29 26 25 23 31 17 12 22 3 30 13 20 2 5 8 9 4 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.831713
0 20 31 10 23 13 25 29 30 4 3 27 14 28 5 1 16 19 17 7 21 24 2 18 12 22 6 9 8 15 11 32 26 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.222025
0 6 5 23 30 10 13 19 3 27 11 9 8 32 18 22 7 4 15 24 31 25 21 17 26 29 28 1 20 2 12 16 14 0
Tiempo=13255

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=6927 speedup=1.913527 distancia minima=10.026808
0 10 25 19 4 18 8 28 6 31 29 32 9 5 1 26 30 16 20 2 14 13 23 27 21 24 7 17 11 15 3 12 22 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run ====
gcc -O -DOPT=1 -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin
./viajante.bin
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.181131
0 20 22 14 28 16 10 19 15 18 11 9 17 6 23 5 24 12 30 2 25 32 4 3 26 29 13 31 21 7 8 27 1 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.866856
0 15 27 19 11 18 1 2 13 25 26 3 16 32 10 5 14 17 23 4 28 20 29 30 31 7 12 8 21 9 6 24 22 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.117588
0 17 14 6 13 25 10 9 4 18 15 21 27 11 20 7 3 28 16 19 1 26 5 29 12 2 23 32 22 24 31 30 8 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.263852
0 6 19 20 18 17 13 2 7 21 8 12 30 1 27 4 11 24 16 32 23 14 9 5 28 29 10 3 26 22 15 31 25 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.240154
0 32 10 25 28 20 6 14 9 18 17 3 27 8 1 11 15 22 4 19 23 26 2 30 31 24 5 13 16 21 12 7 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.037405
0 7 29 19 22 17 6 23 25 5 16 14 9 10 28 32 31 30 18 11 2 4 15 1 20 27 13 26 21 12 8 3 24 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.960697
0 29 26 30 31 24 8 12 21 27 19 11 15 9 2 7 14 16 22 18 1 20 17 4 23 28 13 32 25 5 6 10 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.710642
0 23 16 28 24 22 18 19 4 7 2 29 10 5 25 3 12 30 21 8 27 20 31 26 13 6 11 32 14 9 17 15 1 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.667684
0 15 8 31 29 30 12 25 10 20 4 23 6 18 24 7 21 19 11 9 14 28 27 1 3 26 13 32 2 16 5 17 22 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.101480
0 2 25 3 6 22 26 29 16 28 5 32 13 27 8 21 17 23 10 9 18 4 15 19 30 12 31 24 7 14 11 20 1 0
Tiempo=10471

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=5424 speedup=1.930494 distancia minima=11.181131
0 20 22 14 28 16 10 19 15 18 11 9 17 6 23 5 24 12 30 2 25 32 4 3 26 29 13 31 21 7 8 27 1 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
